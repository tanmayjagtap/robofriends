{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","src","alt","CardList","robots","cardsArray","map","user","i","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflow","height","border","children","App","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uPAceA,G,MAXF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,GAAGC,EAAS,EAATA,MAEnB,OACI,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAG,+BAA0BH,GAAMI,IAAI,WAC5C,6BAAKL,IACL,4BAAIE,SCSDI,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAWD,EAAOE,KAAI,SAACC,EAAKC,GAC9B,OAAS,cAAC,EAAD,CAETV,GAAIM,EAAOI,GAAGV,GACdD,KAAMO,EAAOI,GAAGX,KAChBE,MAAOK,EAAOI,GAAGT,OAHZS,MAKT,OACI,8BACKH,KCHEI,EARC,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,eACd,OACI,8BACI,uBAAOC,KAAK,OAAOC,YAAY,gBAAgBC,SAAUH,OCKtDI,EARF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,QAAQC,OAAO,mBAArD,SACKJ,EAAMK,YCwCJC,G,wDArCX,aAAe,IAAD,8BACV,gBAaJX,eAAiB,SAACY,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IAJP,E,gEAQO,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEnB,OAAQ4B,S,+BAMrC,IAAD,EACqBC,KAAKN,MAAzBvB,EADD,EACCA,OAAOoB,EADR,EACQA,YACPU,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASd,EAAYa,kBAEzD,OAAQjC,EAAOmC,OAGP,sBAAKvC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWU,eAAgBuB,KAAKvB,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUN,OAAQ8B,SANzB,oE,GAzBKM,cCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.0d0d0827.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({name,id,email})=>{\r\n    //const{name,id,email}=props; //---destructuring or you can do it as done in the above line\r\n    return(\r\n        <div className='shadow-5 dib br-2 grow ma2 pa3 tc pointer bg'>\r\n            <img src={`https://robohash.org/${id}`} alt='robots'></img>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardsArray=robots.map((user,i)=>{\r\n        return ( <Card \r\n        key={i}\r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        email={robots[i].email} />);\r\n    })\r\n    return (\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({onSearchChange})=>{\r\n    return(\r\n        <div>\r\n            <input type='text' placeholder='Search Robots' onChange={onSearchChange}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflow:'scroll',height:'500px',border:'2px solid white'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n    render() {\r\n        const{robots,searchfield}=this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length?\r\n             <h1>Loading...Please Have Patience</h1>:\r\n             (\r\n                <div className='tc'>\r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox onSearchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}